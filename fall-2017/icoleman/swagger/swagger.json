{
  "swagger": "2.0",
  "info": {
    "description": "The task management API allows users to create personal tasts and mark them as complete.",
    "version": "1.0.0",
    "title": "Task Management",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "icoleman00@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "taskapi.toddysm.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "task",
      "description": "Everything about tasks",
      "externalDocs": {
        "description": "Find out more about tasks",
        "url": "https://github.com/imcoleman/nsc-ad420-clouddev"
      }
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about users",
        "url": "https://github.com/imcoleman/nsc-ad420-clouddev"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get list of users",
        "description": "Returns list of users",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add a new user",
        "description": "",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The new user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Find user by ID",
        "description": "Returns a single user",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested user",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update an existing user",
        "description": "",
        "operationId": "updateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id to add",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User was successfully updated"
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a user",
        "description": "",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "User was successfully deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Get list of all tasks for a user",
        "description": "Returns an array of tasks",
        "operationId": "getTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to get list of tasks from",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "list of tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "post": {
        "tags": [
          "task"
        ],
        "summary": "Add a new task",
        "description": "",
        "operationId": "addTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "task",
            "description": "Task object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The new task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "User not found"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{userId}/tasks/{taskId}": {
      "get": {
        "tags": [
          "task"
        ],
        "summary": "Find task by ID",
        "description": "Returns a single task",
        "operationId": "getTaskById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user/owner to get task from",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of task to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested task",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "tags": [
          "task"
        ],
        "summary": "Update an existing task",
        "description": "",
        "operationId": "updateTask",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "task",
            "description": "Task object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user/owner to get task from",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "ID of task to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Task was successfully updated"
          },
          "404": {
            "description": "Task not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "task"
        ],
        "summary": "Deletes a task",
        "description": "",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user/owner to get task from",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Task id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Task was successfully deleted"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "completionDate": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "description": "task status",
          "enum": [
            "new",
            "in-progress",
            "blocked",
            "completed"
          ]
        },
        "owner": {
          "type": "integer",
          "format": "int64",
          "description": "the id for the user (who owns the task)"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Task Management API",
    "url": "https://github.com/imcoleman/nsc-ad420-clouddev"
  }
}